print(porder)
#
ggsave(porder, height = 8, width = 16, filename ="taxonomy_order_bargraph_rumen.png")
Dorder %>% group_by(new_taxa) %>% summarise(treatment=n())
Dorder %>% group_by(treatment) %>% summarise(new_taxa=n())
fit = aov(avg_abund ~ treatment, data = Dorder) ## linear model value = mu + treatment + e (y = mu + x + e)
TukeyHSD(fit, "treatment", ordered = TRUE)
pxc <- ggarrange(pphyla, pclass, porder, pfamily, pgenera,
labels = c("Phyla", "Classes", "Orders", "Families", "Genera"), nrow = 3, ncol = 2, legend = "right", font.label = list(size=30), hjust = 0,
vjust = 0)
#pxc
ggsave(pxc, height = 30, width = 20, filename ="taxa_plots_combined.png")
D$level  <- factor(D$level,levels = c("phylum","class","order","family","genus"))
D0 <- D %>%
dplyr::select(-c(std)) %>%
spread(treatment,avg_abund)
# D0[is.na(D0)] <- ""
bg.picker <- function(z) {
if(is.na(z)) {return(NULL)}
if(is.numeric(z)) {
if(z > 0.05 & z <= 0.10) {return("pink")}
if(z > 0.10) {return("yellow")}
}
}
library("formattable")
formattable(D0, list(
`Control` = color_tile("white","green"),
`Treated` = color_tile("white","deepskyblue")
# `3 PR` = color_tile("white","yellow"),
# `4 PR` = color_tile("white","pink"),
# `5 PR` = color_tile("white","yellow"),
# `6 PR` = formatter("span",
#                 style = x ~ style(
#                   "border-radius" = "4px",
#                   "padding-right" = "4px",
#                   "background-color" = sapply(x, bg.picker))
#                 )
))
taxa <- D %>%
group_by(level,new_taxa) %>%
summarize("s"=sum(avg_abund)) %>%
arrange(desc(s)) %>% #originally was arrange(desc(level, s)) but stopped working reporting that desc() must be called with exactly one argument
dplyr::select(level,new_taxa,s)
taxa <- taxa %>%
group_by(level) %>%
arrange(level,s)
p <- ggplot(D, aes(x = treatment, y = new_taxa))
p <- p + geom_point(aes(size = avg_abund, colour = treatment), alpha = 0.4)
p <- p + facet_grid(level~treatment, scales = "free", space = "free")
p <- p + scale_color_manual(values = c("green3","gold","blue","magenta","cyan","yellow", "green", "coral",  "#E7B800", "#FC4E07"))
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p <- p + theme(axis.text.x = element_text(size=8))
p <- p + theme_bw()
p <- p + xlab("treatments") + ylab("average abundances")
p
#ggsave (p, height = 13, width = 8, filename = "taxonomy_bubbleplot_rumen.png")
m1 <- mO %>%
filter(!is.na(level)) %>%
arrange(level,treatment)
D <- m1 %>%
group_by(level, new_taxa) %>%
do(tidy(anova(lm(counts ~  treatment, data = .)))) %>%
filter(term == "treatment")
D$level  <- factor(D$level,levels = c("phylum","class","order","family","genus"))
D <- D %>%
arrange(level,new_taxa)
datatable(D, options = list(pageLength=100)) %>%
formatStyle('p.value', backgroundColor = styleInterval(0.05, c('yellow', 'white')))
write.csv(D, "one.csv")
DX <- D %>%
filter(`p.value` <= 0.05) %>%
dplyr::select(c(level,new_taxa, `p.value`)) %>%
arrange(level,`p.value`)
D0 <- mO %>%
dplyr::group_by(level,new_taxa, treatment) %>%
dplyr::summarise(avg_counts = mean(counts))
to_save = list(D,DX,D0)
save(to_save, file = "taxonomy_ .RData")
load("taxonomy_ .RData")
D <- to_save[[1]]
DX <- to_save[[2]]
D0 <- to_save[[3]]
dd <- spread(D0, key = treatment, value = avg_counts)
temp <- inner_join(DX,dd, by = c("level" = "level", "new_taxa" = "new_taxa"))
fwrite(temp, file = "rumen_significant_otus.csv", col.names = TRUE, sep = ",")
print (dd)
load("taxonomy_ .RData")
D <- to_save[[1]]
DX <- to_save[[2]]
D0 <- to_save[[3]]
D0 <- mutate(D0, avg_counts = avg_counts+1) %>% spread(key = treatment, value = avg_counts)
D1 <- DX %>%
inner_join(D0, by = c("level" = "level", "new_taxa" = "new_taxa")) %>%
mutate(p.value = -log10(p.value)) %>%
gather(key = "treatment", value = "counts", -c(level,new_taxa, p.value))
D1$level <- factor(D1$level, levels = c("phylum","class","order","family","genus"))
D1 <- D1 %>% group_by(level) %>% mutate(tot = sum(counts), relab = counts/tot)
p <- ggplot(D1, aes(x = treatment, y = new_taxa))
p <- p + geom_tile(aes(fill = relab), colour = "white")
p <- p + facet_grid(level~treatment, scales = "free")
p <- p + scale_fill_gradient(low = "orange", high = "blue")
p <- p + theme(strip.text.y = element_text(size = 5),
strip.text.x = element_text(size = 6),
# axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
axis.title = element_text(size = 6))
p <- p + guides(fill="none") + theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p
dd <- filter(D1, treatment == "NEO") %>% mutate(variable = "p-value")
q <- ggplot(dd, aes(x = factor(1), y = new_taxa, group=level))
q <- q + geom_tile(aes(fill = p.value), colour = "white")
q <- q + facet_grid(level~variable, space="free", scales = "free_y")
q <- q + scale_fill_gradient(low = "orange", high = "blue")
q <- q + theme(strip.text = element_text(size = 4),
strip.text.x = element_text(size = 6),
axis.text.y = element_text(size = 5),
axis.title = element_text(size = 6))
q <- q + guides(fill=FALSE) + theme(
# axis.title.x = element_blank(),
# axis.text.x=element_blank(),
# axis.ticks.x=element_blank(),
strip.text.y = element_blank(),
# axis.text.x = element_blank()
axis.text.x = element_text(size = 6)
)
q <- q + xlab("")
q
figure_final <- ggarrange(q, p, widths=c(0.5, 1),
labels=c("A", "B"))
print(figure_final)
#ggsave(filename = "heatmap_rumen.png", plot = figure_final, device = "png", width = 8, height = 10)
res = data.frame("level"=NULL, "OTU"=NULL, "p_value"=NULL, "Carvacrol"=NULL,"EO1"=NULL,"p-cymene"=NULL,"Synthetic EO1"=NULL,"γ-terpinene"=NULL)
for (name in DX$new_taxa) {
print(paste("analysing OTU ", name))
pval = as.numeric(DX[DX$new_taxa==name,"p.value"])
level = DX[DX$new_taxa==name,"level"]
## estimating coefficients
temp = filter(m1, new_taxa == name)
temp$treatment <- factor(temp$treatment, levels = c("Control","Carvacrol","EO1","p-cymene","Synthetic EO1","γ-terpinene"))
g = lm(counts ~ treatment, data = temp)
## extracting coefficients
coefs = g$coefficients
coefs = coefs[!grepl("(Intercept)", names(coefs))]
names(coefs) = gsub("treatment","",names(coefs))
coefs = as.data.frame(t(coefs))
## adding metadata
coefs["level"] = level
coefs["OTU"] = name
coefs["p_value"] = pval
# saving results
res = rbind.data.frame(res, coefs)
}
library("DT")
library("knitr")
library("tidyr")
library("broom")
library("vegan")
library("ggpubr")
library("ggplot2")
library("reshape2")
library("tidyverse")
library("data.table")
library("ggrepel")
#project_folder = "~/Documents/MILKQUA"
metadata <- fread("/home/oem/Results/RUMEN/mapping_file_rumen.csv")
names(metadata)[1] <- "sample"
metadata$treatment[ which(metadata$treatment == "no treatment (ruminal liquid + diet)")] <- "Control"
metadata$treatment[ which(metadata$treatment == "AE1")] <- "NEO"
metadata$treatment[ which(metadata$treatment == "AE sintético 1")] <- "SEO"
metadata$treatment[ which(metadata$treatment == "γ-terpinene")] <- "g-terpinene"
meta_subset <- filter(metadata, treatment !="ruminal liquid")
meta_subset %>%
group_by(treatment) %>%
dplyr::summarise(N=n())
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L2.txt", header = TRUE, skip = 1)
otu <- gather(otu, key = "sample", value ="counts", -`#OTU ID`) %>% spread(key = `#OTU ID`, value = counts)
otu$treatment = metadata$treatment[match(otu$sample,metadata$sample)]
otu <- filter(otu, sample %in% meta_subset$sample)
otu
## relative abundances
metadata_cols = names(meta_subset)[c(1,5)]
M <- dplyr::select(otu,-all_of(metadata_cols))
M <- M/rowSums(M)
M <- bind_cols(dplyr::select(otu, all_of(metadata_cols)),M)
M <- subset(M, treatment !="ruminal liquid")
otu = otu %>% relocate (treatment, .after = sample)
metadata_cols = names(otu)[c(1,2)]
otu <- subset(otu, treatment !="ruminal liquid")
mO <- reshape2::melt(otu,id.vars = metadata_cols, value.name = "counts", variable.name = "phylum")
mO$phylum <- gsub("^.*;","",mO$phylum)
mO[mO$phylum == "2","phylum"] <- "WPS.2"
mO$sample <- factor(mO$sample)
mO <- mO %>%
arrange(treatment)
#mO$Cow_ID <- paste(mO$cow, mO$ref)
m1 <- reshape2::melt(M,id.vars = metadata_cols, value.name = "counts", variable.name = "phylum")
m1$phylum <- gsub("^.*;","",m1$phylum)
m1[m1$phylum == "2","phylum"] <- "WPS.2"
m1$sample <- factor(m1$sample)
m1 <- m1 %>%
arrange(treatment)
# m1$sample <- paste(as.character(m1$sample),as.character(m1$ ),sep="-")
ordered_samples <- metadata %>%
arrange(treatment) %>%
dplyr::select(treatment,sample)
m1$sample <- factor(m1$sample, levels = ordered_samples$sample)
m1$treatment <- factor(m1$treatment)
D <- m1 %>%
group_by(phylum) %>%
summarise(N=n(), avg_abund = round(mean(counts),4), std = round(sd(counts),3)) %>%
filter(avg_abund>0.005) %>%
arrange(phylum,avg_abund)
phylum <- D %>%
group_by(phylum) %>%
summarize("s"=sum(avg_abund)) %>%
arrange(desc(s)) %>%
dplyr::select(phylum,s)
D$phylum <- factor(D$phylum, levels = rev(phylum$phylum[order(phylum$s)]))
D <- D %>%
arrange(phylum)
kable(D)
D <- m1 %>%
group_by(phylum) %>%
summarise(N=n(), avg_abund = round(mean(counts),4), std = round(sd(counts),3)) %>%
# filter(avg_abund>0.005) %>%
arrange(phylum,avg_abund)
phylum <- D %>%
group_by(phylum) %>%
summarize("s"=sum(avg_abund)) %>%
arrange(desc(s)) %>%
dplyr::select(phylum,s)
D$phylum <- factor(D$phylum, levels = rev(phylum$phylum[order(phylum$s)]))
D <- D %>%
arrange(phylum)
kable(D)
View(D)
pphylatot <- ggplot(D, aes(x=factor(1), y=avg_abund, fill=phylum)) + geom_bar(width=1,stat="identity")
#pphylatot <- pphylatot + facet_grid(N~treatment)
#pphylatot <- pphylatot + coord_polar(theta='y', start=0) #activate this if you want a piechart
#pphylatot <- pphylatot + scale_fill_brewer(palette = "Set3")
pphylatot <- pphylatot + geom_label_repel(aes(label = paste0(avg_abund*100, "%")), position=position_stack (vjust=0.5), size=4, show.legend = F)
pphylatot <- pphylatot + guides(fill = guide_legend(title = "Phyla"))
pphylatot <- pphylatot + xlab("Relative abundances") + ylab("")
my_palette = get_palette(c("green3","gold","blue","magenta","cyan","yellow","red","gray","purple","brown","black", "darkorange1","pink1", "darkorchid1", "seagreen2"), length(unique(D$phylum)))
pphylatot <- pphylatot + xlab("relative abundances") + ylab("percentages")
pphylatot <- pphylatot + scale_fill_manual(values = my_palette)
pphylatot <- pphylatot + theme(text = element_text(size=10),
axis.text.x = element_text(size=8),
# axis.text.y = element_text(size=4),
strip.text = element_text(size = 8),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text=element_text(size=10),
legend.title=element_text(size=10))
print(pphylatot)
#ggsave(pphylatot, height = 20, width = 10, filename ="taxonomy_phylum_boxplot_rumen_tot.png")
D %>% group_by(phylum) %>% summarise(treatment=n())
names(metadata)[1] <- "sample"
metadata$treatment[ which(metadata$treatment == "no treatment (ruminal liquid + diet)")] <- "Control"
metadata$treatment[ which(metadata$treatment == "AE1")] <- "NEO"
metadata$treatment[ which(metadata$treatment == "AE sintético 1")] <- "SEO"
metadata$treatment[ which(metadata$treatment == "γ-terpinene")] <- "g-terpinene"
meta_subset <- filter(metadata, treatment !="ruminal liquid")
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
View(otu)
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L2.txt", header = TRUE, skip = 1)
View(ordered_samples)
View(otu)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
otu <- gather(otu, key = "sample", value ="counts", -`#OTU ID`) %>% spread(key = `#OTU ID`, value = counts)
otu$treatment = metadata$treatment[match(otu$sample,metadata$sample)]
otu <- filter(otu, sample %in% meta_subset$sample)
## relative abundances
metadata_cols = names(meta_subset)[c(1,5)]
M <- dplyr::select(otu,-all_of(metadata_cols))
M <- M/rowSums(M)
M <- bind_cols(dplyr::select(otu, all_of(metadata_cols)),M)
M <- subset(M, treatment !="ruminal liquid")
## plot of phylum abundance
mm <- gather(M, key = "phylum", value = "abundance", -c(sample,treatment))
phyls = group_by(mm, phylum) %>% summarise(avg = mean(abundance)) %>% arrange(desc(avg))
oldc <- phyls$phylum[phyls$avg < 0.01]
newc <- rep("Other", length(oldc))
vec <- newc[match(mm$phylum,oldc)]
mm$phylum <- ifelse(mm$phylum %in% oldc, "Other", as.character(mm$phylum))
mm$phylum <- factor(mm$phylum, levels = c(phyls$phylum[1: (length(phyls$phylum) - length(oldc))],"Other"))
p <- ggplot(mm, aes( x = phylum, y = abundance)) + geom_boxplot(aes(fill = phylum))
p <- p + theme(text = element_text(size = 6),
axis.text.x = element_text(angle=90))
p
library("ggpubr")
p <- ggboxplot(mm, "phylum", "abundance", color = "phylum", legend = "none")
p <- p + rotate_x_text(90) + font("xy.text", size=8)
p
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## path parameters
main_path = "~/"
## write out table of the core microbiota
fname = file.path(main_path, "tables", "core_microbiota.csv")
select(M, c(taxon,avg)) %>% rename(avg_normalised_counts = avg) %>% fwrite(fname, sep = ",")
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
select(M, c(taxon,avg)) %>% rename(avg_normalised_counts = avg) %>% fwrite(fname, sep = ",")
oldc <- M$taxon[M$avg < 25]
newc <- rep("Other", length(oldc))
vec <- newc[match(M$taxon,oldc)]
M$taxon <- ifelse(M$taxon %in% oldc, "Other", as.character(M$taxon))
M$taxon <- gsub("group","",M$taxon)
M <- group_by(M, taxon) %>% summarise(avg = mean(avg)) %>% arrange(desc(avg))
M$taxon -> M$short_name
M$short_name <- substr(M$short_name,start = 1, stop = 17)
M$short_name <- factor(M$short_name, levels = M$short_name)
require('RColorBrewer')
mycolors = c(brewer.pal(name="Set3", n = 11), brewer.pal(name="Paired", n = 12))
q <- ggpie(M, "avg", label="short_name", color = "white", fill = "short_name",  legend = "none",
lab.pos = "out", palette = mycolors, ggtheme = theme_pubr())
q <- q + font("xy.text", size = 8, color = "gray20", face="bold")
q
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
select(M, c(taxon,avg)) %>% rename(avg_normalised_counts = avg) %>% fwrite(fname, sep = ",")
View(M)
#project_folder = "~/Documents/MILKQUA"
metadata <- fread("/home/oem/Results/RUMEN/mapping_file_rumen.csv")
names(metadata)[1] <- "sample"
metadata$treatment[ which(metadata$treatment == "no treatment (ruminal liquid + diet)")] <- "Control"
metadata$treatment[ which(metadata$treatment == "AE1")] <- "NEO"
metadata$treatment[ which(metadata$treatment == "AE sintético 1")] <- "SEO"
metadata$treatment[ which(metadata$treatment == "γ-terpinene")] <- "g-terpinene"
meta_subset <- filter(metadata, treatment !="ruminal liquid")
## OTU - phylum
otu <- fread(file.path(main_path, path_to_results, "taxa_summary_abs/CSS_normalized_otu_table_L2.txt"), header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L2.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
otu <- gather(otu, key = "sample", value ="counts", -`#OTU ID`) %>% spread(key = `#OTU ID`, value = counts)
otu$treatment = metadata$treatment[match(otu$sample,metadata$sample)]
otu <- filter(otu, sample %in% meta_subset$sample)
## relative abundances
metadata_cols = names(meta_subset)[c(1,5)]
M <- dplyr::select(otu,-all_of(metadata_cols))
M <- M/rowSums(M)
M <- bind_cols(dplyr::select(otu, all_of(metadata_cols)),M)
M <- subset(M, treatment !="ruminal liquid")
## plot of phylum abundance
mm <- gather(M, key = "phylum", value = "abundance", -c(sample,treatment))
phyls = group_by(mm, phylum) %>% summarise(avg = mean(abundance)) %>% arrange(desc(avg))
oldc <- phyls$phylum[phyls$avg < 0.01]
newc <- rep("Other", length(oldc))
vec <- newc[match(mm$phylum,oldc)]
mm$phylum <- ifelse(mm$phylum %in% oldc, "Other", as.character(mm$phylum))
mm$phylum <- factor(mm$phylum, levels = c(phyls$phylum[1: (length(phyls$phylum) - length(oldc))],"Other"))
p <- ggplot(mm, aes( x = phylum, y = abundance)) + geom_boxplot(aes(fill = phylum))
p <- p + theme(text = element_text(size = 6),
axis.text.x = element_text(angle=90))
p
library("ggpubr")
p <- ggboxplot(mm, "phylum", "abundance", color = "phylum", legend = "none")
p <- p + rotate_x_text(90) + font("xy.text", size=8)
p
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
View(M)
View(otu)
p
oldc <- M$taxon[M$avg < 25]
newc <- rep("Other", length(oldc))
vec <- newc[match(M$taxon,oldc)]
M$taxon <- ifelse(M$taxon %in% oldc, "Other", as.character(M$taxon))
M$taxon <- gsub("group","",M$taxon)
M <- group_by(M, taxon) %>% summarise(avg = mean(avg)) %>% arrange(desc(avg))
M$taxon -> M$short_name
M$short_name <- substr(M$short_name,start = 1, stop = 17)
M$short_name <- factor(M$short_name, levels = M$short_name)
require('RColorBrewer')
mycolors = c(brewer.pal(name="Set3", n = 11), brewer.pal(name="Paired", n = 12))
q <- ggpie(M, "avg", label="short_name", color = "white", fill = "short_name",  legend = "none",
lab.pos = "out", palette = mycolors, ggtheme = theme_pubr())
q <- q + font("xy.text", size = 8, color = "gray20", face="bold")
q
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) #> 0.99
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
select(M, c(taxon,avg)) %>% rename(avg_normalised_counts = avg) %>% fwrite(fname, sep = ",")
#project_folder = "~/Documents/MILKQUA"
metadata <- fread("/home/oem/Results/RUMEN/mapping_file_rumen.csv")
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
## path parameters
main_path = "~/"
names(metadata)[1] <- "sample"
metadata$treatment[ which(metadata$treatment == "no treatment (ruminal liquid + diet)")] <- "Control"
metadata$treatment[ which(metadata$treatment == "AE1")] <- "NEO"
metadata$treatment[ which(metadata$treatment == "AE sintético 1")] <- "SEO"
metadata$treatment[ which(metadata$treatment == "γ-terpinene")] <- "g-terpinene"
meta_subset <- filter(metadata, treatment !="ruminal liquid")
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
select(M, c(taxon,avg)) %>% rename(avg_normalised_counts = avg) %>% fwrite(fname, sep = ",")
oldc <- M$taxon[M$avg < 25]
newc <- rep("Other", length(oldc))
vec <- newc[match(M$taxon,oldc)]
M$taxon <- ifelse(M$taxon %in% oldc, "Other", as.character(M$taxon))
M$taxon <- gsub("group","",M$taxon)
M <- group_by(M, taxon) %>% summarise(avg = mean(avg)) %>% arrange(desc(avg))
M$taxon -> M$short_name
M$short_name <- substr(M$short_name,start = 1, stop = 17)
M$short_name <- factor(M$short_name, levels = M$short_name)
require('RColorBrewer')
mycolors = c(brewer.pal(name="Set3", n = 11), brewer.pal(name="Paired", n = 12))
q <- ggpie(M, "avg", label="short_name", color = "white", fill = "short_name",  legend = "none",
lab.pos = "out", palette = mycolors, ggtheme = theme_pubr())
q <- q + font("xy.text", size = 8, color = "gray20", face="bold")
q
g <- ggarrange(p, q, ncol = 2, labels = c("A","B"), heights = c(0.1,4))
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L2.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
otu <- gather(otu, key = "sample", value ="counts", -`#OTU ID`) %>% spread(key = `#OTU ID`, value = counts)
otu$treatment = metadata$treatment[match(otu$sample,metadata$sample)]
otu <- filter(otu, sample %in% meta_subset$sample)
## relative abundances
metadata_cols = names(meta_subset)[c(1,5)]
M <- dplyr::select(otu,-all_of(metadata_cols))
M <- M/rowSums(M)
M <- bind_cols(dplyr::select(otu, all_of(metadata_cols)),M)
M <- subset(M, treatment !="ruminal liquid")
## plot of phylum abundance
mm <- gather(M, key = "phylum", value = "abundance", -c(sample,treatment))
phyls = group_by(mm, phylum) %>% summarise(avg = mean(abundance)) %>% arrange(desc(avg))
oldc <- phyls$phylum[phyls$avg < 0.01]
newc <- rep("Other", length(oldc))
vec <- newc[match(mm$phylum,oldc)]
mm$phylum <- ifelse(mm$phylum %in% oldc, "Other", as.character(mm$phylum))
mm$phylum <- factor(mm$phylum, levels = c(phyls$phylum[1: (length(phyls$phylum) - length(oldc))],"Other"))
p <- ggplot(mm, aes( x = phylum, y = abundance)) + geom_boxplot(aes(fill = phylum))
p <- p + theme(text = element_text(size = 6),
axis.text.x = element_text(angle=90))
p
library("ggpubr")
p <- ggboxplot(mm, "phylum", "abundance", color = "phylum", legend = "none")
p <- p + rotate_x_text(90) + font("xy.text", size=8)
p
g <- ggarrange(p, q, ncol = 2, labels = c("A","B"), heights = c(0.1,4))
g
ggsave(filename = "../Figure1.png", plot = g, device = "png", dpi = 250)
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
## OTU - everything
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
M <- otu[vec,]
## OTU - everything
otu <- fread("/home/oem/Results/RUMEN/results/taxa_summary_abs/CSS_normalized_otu_table_L6.txt", header = TRUE, skip = 1)
otu$`#OTU ID` <- gsub("^.*;","",otu$"#OTU ID")
M <- otu[,-1] > 0
vec <- rowSums(M)/ncol(M) > 0.99
View(otu)
M <- otu[vec,]
vec <- !grepl("uncultured", M$`#OTU ID`)
M <- M[vec,]
M$avg <- rowMeans(M[,-1])
M <- arrange(M, desc(avg)) %>% rename(taxon = `#OTU ID`)
## write out table of the core microbiota
fname = file.path(main_path, "core_microbiota.csv")
